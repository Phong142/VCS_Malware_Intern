
section .data
    sTextIn     db "String = ", 0h 
    sTextOut    db "String Reversed = ", 0h 

section .bss
    String      resb 100

section .text
global _start

_start:
    mov     rbp, rsp

    mov     rdi, 1
    mov     rsi, sTextIn
    mov     rdx, 9
    mov     rax, 1
    syscall                             ;write text "string = "

    mov     rdi, 0
    mov     rsi, String
    mov     rdx, 100
    mov     rax, 0
    syscall                             ;read string

    mov     rdi, 1
    mov     rsi, sTextOut
    mov     rdx, 18
    mov     rax, 1
    syscall                             ;write text "string rev..ed= "

    mov     rsi, String
    call    _reverse                    ;reverse(rsi = &string --> rdi = len)

    mov     rsi, String
    mov     byte [rsi + rdi], 0Ah       ;insert \n
    inc     rdi
    mov     rdx, rdi                    ;rdx = string.length
    mov     rdi, 1
    mov     rax, 1
    syscall                             ;write string reversed

    mov     rdi, 0
    mov     rax, 60
    syscall

_reverse:                               ;reverse (rsi = &String		--> return rsi = &String, rdi = String.length)
    push    rbp
    mov     rbp, rsp
    push    rax
    push    rcx
    push    rdx
    mov     rdi, rsi                    ;rdi = rsi = &string
    mov     rdx, rsi                    ;rdx = rsi = &string
    xor     rax, rax
    xor     rcx, rcx

    .LoopSym:
        lodsb                           ;al = [rsi++]
        cmp     al, 0Ah
        jz      .SaveSym
        push    rax                     ;push [rax] to stack
        inc     rcx
        jmp     .LoopSym
    
    .SaveSym:
        cmp     rcx, 0
        jz      .Exit
        pop     rax                     ;pop data from stack, mov to rax
        stosb                           ;[rdi++] = al
        dec     rcx
        jmp     .SaveSym

    .Exit:   
        sub     rdi, rdx                ;rdi = String.length
        pop     rdx
        pop     rcx
        pop     rax
        mov     rsp, rbp
        pop     rbp
        ret