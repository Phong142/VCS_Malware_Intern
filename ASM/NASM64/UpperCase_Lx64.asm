
section .data
    sTextIn     db "String = ", 0h
    sTextOut    db "String Uppercased = ", 0h

section .bss
    String      resb 50

section .text
global _start

_start:
    mov     rbp, rsp

    mov     rdi, 1                      ;hOutput
    mov     rsi, sTextIn
    mov     rdx, 9                      ;sizeof sTextIn
    mov     rax, 1                      ;sys_write
    syscall

    mov     rdi, 0                      ;hInput
    mov     rsi, String
    mov     rdx, 50                     ;so ki tu
    mov     rax, 0                      ;sys_read
    syscall

    mov     rdi, 1
    mov     rsi, sTextOut
    mov     rdx, 20
    mov     rax, 1
    syscall

    mov     rbx, String                 ;rbx = &String
    .Upper:
        xor     rdx, rdx                ;rdx = 0
        mov     dl, byte [rbx]          ;dl = rbx[n]    n = 1,2,3,4,5,6,...
        cmp     dl, 0Ah                 ;cmp with \n
        jz      .Exit                   ;dl = \n --> jmp .Exit
        cmp     dl, 'a'                 ;cmp with a
        jl      .Resume                 ;dl < 'a' --> not number --> jmp .Resume
        cmp     dl, 'z'                 ;cmp with z
        jg      .Resume                 ;dl > 'z' --> not number --> jmp .Resume
        sub     dl, 20h                 ;dl - '0'
        mov     byte [rbx], dl          ;rbx[n] = (dl - '0')

    .Resume:
        inc     rbx                     ;rbx[i++]
        jmp     .Upper
    
    .Exit:
        mov     rdi, 1                  ;hOutput
        mov     rsi, String         
        mov     rdx, 50             
        mov     rax, 1                  ;sys_write
        syscall

        mov     rdi, 0
        mov     rax, 60
        syscall